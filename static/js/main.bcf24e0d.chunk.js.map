{"version":3,"sources":["components/Filter.module.css","components/ContactForm.module.css","components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js","components/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","form","label","input","type","autoComplete","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","onFilterContact","App","filter","addContact","newContact","shortid","generate","repeatedContact","find","contact","invalidContact","length","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,qLCkEnHC,E,4MA1DfC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGNC,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,cAAtBJ,EADY,EACZA,KAAMK,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG5BE,aAAe,SAAAJ,GACfA,EAAMK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGtC,WAAU,IAAD,EACoBU,KAAKZ,MAAtBC,EADH,EACGA,KAAMC,EADT,EACSA,OACd,OACI,uBAAMW,UAAWC,IAAOC,KAAMJ,SAAUC,KAAKJ,aAA7C,UACJ,wBAAOK,UAAWC,IAAOE,MAAzB,iBAEC,uBACOH,UAAWC,IAAOG,MAClBC,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,aAAa,MACbC,SAAUR,KAAKT,aACfkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGP,wBAAOV,UAAWC,IAAOE,MAAzB,mBAEP,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,MACLjB,KAAK,SACLoB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRjB,MAAOJ,EACPiB,aAAa,MACbC,SAAUR,KAAKT,kBAInB,wBAASU,UAAWC,IAAOU,OAAQN,KAAK,SAAxC,gC,GAtDkBO,a,gBCwBXC,EAxBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAChB,oBAAIf,UAAWC,IAAOe,KAAtB,SAEQF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACT,qBACIW,UAAWC,IAAOkB,KADtB,UAGE/B,EAHF,KAGUC,EACV,wBAAQW,UAAWC,IAAOU,OAAQN,KAAK,SAASe,QAAS,kBAAIL,EAAgBG,IAA7E,sBAFSA,S,iBCUVG,EAhBA,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,MAAO6B,EAAsB,EAAtBA,gBACvB,OAAU,wBAAOtB,UAAWC,IAAOE,MAAzB,kCAEF,uBAAOH,UAAWC,IAAOG,MACvBC,KAAK,OACLZ,MAAOA,EACPc,SAAUe,QCyEPC,E,4MA3EbpC,MAAQ,CACN2B,SAAU,CACR,CAAEI,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE6B,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,cAEhDmC,OAAQ,I,EAGVC,WAAa,YAAuB,IAApBrC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdqC,EAAa,CACjBR,GAAIS,IAAQC,WACZxC,OACAC,UAEIwC,EAAkB,EAAK1C,MAAM2B,SAASgB,MAAK,SAAAC,GAAO,OAAIA,EAAQ3C,OAASsC,EAAWtC,QAClF4C,EAA4C,IAA3BN,EAAWtC,KAAK6C,QAA6C,IAA7BP,EAAWrC,OAAO4C,OACrEJ,EACFK,MAAM,GAAD,OAAIR,EAAWtC,KAAf,6BACI4C,EACTE,MAAM,sBAEN,EAAKxC,UAAS,SAAAyC,GAAS,MAAK,CAAErB,SAAS,CAAEY,GAAH,mBAAkBS,EAAUrB,gB,EAMtEsB,cAAgB,SAACC,GACf,EAAK3C,UAAS,SAAAyC,GAAS,MAAK,CAC1BrB,SAAUqB,EAAUrB,SAASU,QAAO,SAAAO,GAAO,OAAEA,EAAQb,KAAOmB,U,EAIhEC,aAAe,SAAC/C,GACd,EAAKG,SAAS,CAAC8B,OAAQjC,EAAMC,cAAcC,S,EAG7C8C,mBAAqB,WAAO,IAAD,EACI,EAAKpD,MAA1BqC,EADiB,EACjBA,OAAQV,EADS,EACTA,SACV0B,EAAmBhB,EAAOiB,cAChC,OAAO3B,EAASU,QAAO,SAAAO,GAAO,OAAEA,EAAQ3C,KAAKqD,cAAcC,SAASF,O,uDAGtE,WACE,IAAMG,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aACnDJ,GACF5C,KAAKL,SAAS,CAAEoB,SAAU6B,M,gCAI9B,SAAmBK,EAAWb,GACxBpC,KAAKZ,MAAM2B,WAAaqB,EAAUrB,UACpCgC,aAAaG,QAAQ,WAAYL,KAAKM,UAAUnD,KAAKZ,MAAM2B,a,oBAI/D,WAAU,IACAU,EAAUzB,KAAKZ,MAAfqC,OACF2B,EAAkBpD,KAAKwC,qBAE7B,OACA,gCACF,2CACM,cAAC,EAAD,CAAazC,SAAUC,KAAK0B,aAClC,0CACM,cAAC,EAAD,CAAQhC,MAAO+B,EAAQF,gBAAiBvB,KAAKuC,eAC7C,cAAC,EAAD,CAAaxB,SAAUqC,EAAiBpC,gBAAiBhB,KAAKqC,uB,GArEpDxB,a,YCAlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BxE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.bcf24e0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__WCPst\",\"label\":\"Filter_label__3Zdik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1VOpr\",\"form\":\"ContactForm_form__5jvYK\",\"input\":\"ContactForm_input__M3yXA\",\"button\":\"ContactForm_button__1u-Oy\"};","import React, { Component } from \"react\";\r\nimport styles from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component{\r\n static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    }\r\n\r\nstate = {\r\n  name: '',\r\n  number: ''\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = event => {\r\n    event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: ''})\r\n  };\r\n    \r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n                    Name\r\n         <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n/>\r\n                </label>\r\n                 <label className={styles.label}>\r\n                    Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button  className={styles.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={styles.list}>\r\n        {\r\n            contacts.map(({ id, name, number }) => (\r\n                <li\r\n                    className={styles.item}\r\n                    key={id}\r\n                >{name}: {number}\r\n                <button className={styles.button} type=\"button\" onClick={()=>onDeleteContact(id)}>Delete</button>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onFilterContact }) => {\r\n  return (  <label className={styles.label}>\r\n          Find contacts by Name\r\n          <input className={styles.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onFilterContact}\r\n          />\r\n    </label>)\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilterContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\"\nimport ContactList from \"./components/ContactList\"\nimport Filter from \"./components/Filter\";\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number\n    }\n    const repeatedContact = this.state.contacts.find(contact => contact.name === newContact.name);\n    const invalidContact = newContact.name.length === 0 || newContact.number.length === 0;\n    if (repeatedContact) {\n      alert(`${newContact.name} is already in contacts!`)\n    } else if (invalidContact) {\n      alert(\"Fill empty fields!\");\n    } else {\n      this.setState(prevState => ({ contacts: [newContact, ...prevState.contacts] }));\n    }\n    \n  }\n\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact=>contact.id !== contactId),\n    }))\n  }\n\n  changeFilter = (event) => {\n    this.setState({filter: event.currentTarget.value})\n  }\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact=>contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n    }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n    const { filter} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n    <div>\n  <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact}/>\n  <h2>Contacts</h2>\n        <Filter value={filter} onFilterContact={this.changeFilter }/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n</div>\n  )\n}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2URwi\",\"item\":\"ContactList_item__18WVo\",\"button\":\"ContactList_button__18Cbr\"};"],"sourceRoot":""}